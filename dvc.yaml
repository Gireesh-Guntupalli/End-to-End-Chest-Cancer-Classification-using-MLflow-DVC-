# stages:
#   data_ingestion:
#     cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py
#     deps:
#       - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
#       - config/config.yaml
#     outs:
#       - artifacts/data_ingestion/Chest-CT-Scan-data


#   prepare_base_model:
#     cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
#     deps:
#       - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
#       - config/config.yaml
#     params:
#       - IMAGE_SIZE
#       - INCLUDE_TOP
#       - CLASSES
#       - WEIGHTS
#       - LEARNING_RATE
#     outs:
#       - artifacts/prepare_base_model


#   training:
#     cmd: python src/cnnClassifier/pipeline/stage_03_model_trainer.py
#     deps:
#       - src/cnnClassifier/pipeline/stage_03_model_trainer.py
#       - config/config.yaml
#       - artifacts/data_ingestion/Chest-CT-Scan-data
#       - artifacts/prepare_base_model
#     params:
#       - IMAGE_SIZE
#       - EPOCHS
#       - BATCH_SIZE
#       - AUGMENTATION
#     outs:
#       - artifacts/training/model.h5


#   evaluation:
#     cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation.py
#     deps:
#       - src/cnnClassifier/pipeline/stage_04_model_evaluation.py
#       - config/config.yaml
#       - artifacts/data_ingestion/Chest-CT-Scan-data
#       - artifacts/training/model.h5
#     params:
#       - IMAGE_SIZE
#       - BATCH_SIZE
#     metrics:
#     - scores.json:
#         cache: false



stages:
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py
    deps:
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/Chest-CT-Scan-data:
          cache: true  # Enable caching for this output

  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params:
      - params.yaml:  # Explicitly mention the params file
          - IMAGE_SIZE
          - INCLUDE_TOP
          - CLASSES
          - WEIGHTS
          - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model:
          cache: true  # Enable caching for this output

  training:
    cmd: python src/cnnClassifier/pipeline/stage_03_model_trainer.py
    deps:
      - src/cnnClassifier/pipeline/stage_03_model_trainer.py
      - config/config.yaml
      - artifacts/data_ingestion/Chest-CT-Scan-data
      - artifacts/prepare_base_model
    params:
      - params.yaml:
          - IMAGE_SIZE
          - EPOCHS
          - BATCH_SIZE
          - AUGMENTATION
    outs:
      - artifacts/training/model.h5:
          cache: true  # Enable caching for this output

  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation.py
    deps:
      - src/cnnClassifier/pipeline/stage_04_model_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/Chest-CT-Scan-data
      - artifacts/training/model.h5
    params:
      - params.yaml:
          - IMAGE_SIZE
          - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false  # Disable caching for this metric file
